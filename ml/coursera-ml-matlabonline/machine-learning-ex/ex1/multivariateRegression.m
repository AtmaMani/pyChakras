% load datadata = load('ex1data2.txt');X=data(:,1:2);y=data(:,3);m=length(y);% print first 10 rows% fprintf('x=[%0.f $0.f], y=%.0f\n', [X(1:10,:), y(1:10,:)]');% Normalize X array[X_norm, mu, sigma] = featureNormalize(X);% Add intercept column to XX_norm = [ones(m, 1), X_norm];% Run GD for multiple variablesalpha=0.3;num_iters =400;% init thetastheta = zeros(3,1);[theta, J] = gradientDescentMulti(X_norm, y, theta, alpha, num_iters);fprintf('Theta0 : %f, theta1: %f, theta2: %f\n', theta(1), theta(2), theta(3));% plot the loss function##plot(1:num_iters, J, '-b', 'LineWidth',2);##xlabel('Number of iterations');##ylabel('Cost J');% prediction for 1650 sqft home, 3 bedroomsxdash = [1650, 3];xdash_norm = (xdash-mu)./sigma;xdash_norm = [1, xdash_norm];predicted_y = xdash_norm * theta;fprintf('\nPrice of home predicted: %f', predicted_y);% prediction using normal equationX_new = [ones(m,1), X];theta_normaleq = normalEqn(X_new, y);fprintf('\nNormal eq: Theta0 : %f, theta1: %f, theta2: %f\n', theta_normaleq(1), theta_normaleq(2), theta_normaleq(3)); predicted_y2 = [1,xdash] * theta_normaleq;fprintf('\nNormal eq: Price of home predicted: %f\n', predicted_y2);